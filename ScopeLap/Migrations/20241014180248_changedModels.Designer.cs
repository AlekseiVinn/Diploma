// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScopeLap.DataBaseEngine;

#nullable disable

namespace ScopeLap.Migrations
{
    [DbContext(typeof(ScopeLapDbContext))]
    [Migration("20241014180248_changedModels")]
    partial class changedModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScopeLap.DataBaseEngine.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HashPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Modified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Commentary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Commented")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountID");

                    b.HasIndex("PostId");

                    b.ToTable("Commentaries");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.LapSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("LapNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LapTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CarId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Posted")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.TrackConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("TrackConfigurations");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.TrackDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LapSessionId")
                        .HasColumnType("int");

                    b.Property<int>("TrackConfigId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("TrackDate")
                        .HasColumnType("date");

                    b.Property<int>("TracksId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LapSessionId");

                    b.HasIndex("TracksId");

                    b.ToTable("TrackDays");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Commentary", b =>
                {
                    b.HasOne("ScopeLap.DataBaseEngine.Account", "Account")
                        .WithMany("Commentaries")
                        .HasForeignKey("AccountID");

                    b.HasOne("ScopeLap.Models.DataBaseEngine.Post", "Post")
                        .WithMany("Commentaries")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.LapSession", b =>
                {
                    b.HasOne("ScopeLap.DataBaseEngine.Account", "Account")
                        .WithMany("Sessions")
                        .HasForeignKey("AccountId");

                    b.HasOne("ScopeLap.Models.DataBaseEngine.Car", "Car")
                        .WithMany("Sessions")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Post", b =>
                {
                    b.HasOne("ScopeLap.DataBaseEngine.Account", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.TrackConfiguration", b =>
                {
                    b.HasOne("ScopeLap.Models.DataBaseEngine.Track", "Track")
                        .WithMany("TrackConfigurations")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.TrackDay", b =>
                {
                    b.HasOne("ScopeLap.Models.DataBaseEngine.LapSession", null)
                        .WithMany()
                        .HasForeignKey("LapSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScopeLap.Models.DataBaseEngine.TrackConfiguration", null)
                        .WithMany()
                        .HasForeignKey("TracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScopeLap.DataBaseEngine.Account", b =>
                {
                    b.Navigation("Commentaries");

                    b.Navigation("Posts");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Car", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Post", b =>
                {
                    b.Navigation("Commentaries");
                });

            modelBuilder.Entity("ScopeLap.Models.DataBaseEngine.Track", b =>
                {
                    b.Navigation("TrackConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
